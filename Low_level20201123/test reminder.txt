test timer interrupt   √
test if communication protocol is correct
  MCU sending √
  MCU receiving √
  PC sending 
  PC recieving
test PWM producing  √
test direct acquire angular velocity from IMU   √
test communication frequency    √
test velocity quality
test reference torque generation
test if the direction and unit of sensor feedback coincides to high-level assumed



Testing Log:
20201217
Problem
  limit PWM duty cycle  
  The PWM duty cycle (defined as a uint16_t) for 0-500 will turn to be a very large number, so the -500 actually >> 500
Solution
  Define PWM_commandL/PWM_commandR as int16_t

20201219
Problem
  The yaw angle from IMU for asymmetric motion detection is easy to drift
Solution 
  According to practical scenario, the yaw angle need to be set to zero from time to time

20201220
Problem 
   The PC sending/MCU recieving correction rate is not good for casual combination
Solution
   The buradrate should be carefully choose with MCU main frequency, like 460800 for 500HzMCU+100HzPC; 
   Use the logic of id_method 3 can promise the correction of receive but the frequency is about 60Hz, with MCU run about 250Hz
   For practical use, the PC should have timer and for user intention detection which is requiring high frequency, maybe the PC can run without a timer

20210323
Notice
   The ID gain of PID controller are set under the intrinsic assumption of Tcontrol = 1s instead of real control period for de/dt = (e(k) - e(k-1))/Tcontrol.

receiveCompleted || !PC_started
